---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/ui/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  showSocial?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  showSocial = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    'top-0 z-40 mx-auto w-full flex-none border-b border-gray-50/0 transition-[opacity] ease-in-out print:hidden',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'text-default relative mx-auto w-full px-3 py-3 lg:px-6',
      {
        'lg:flex lg:justify-between': position !== 'center',
      },
      {
        'lg:grid lg:grid-cols-3 lg:items-center': position === 'center',
      },
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between']}>
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="flex items-center lg:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="text-default hidden w-full items-center overflow-x-hidden overflow-y-auto lg:mx-5 lg:flex lg:w-auto lg:justify-self-center lg:overflow-x-auto lg:overflow-y-visible"
      aria-label="Main navigation"
    >
      <ul
        class="flex w-full flex-col text-xl font-medium tracking-[0.01rem] lg:w-auto lg:flex-row lg:justify-center lg:self-center lg:text-[0.9375rem]"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button type="button" class="hover:text-link flex items-center px-4 py-3">
                    {text}{' '}
                    <Icon name="tabler:chevron-down" class="ml-0.5 hidden h-3.5 w-3.5 lg:inline rtl:mr-0.5 rtl:ml-0" />
                  </button>
                  <ul class="dropdown-menu rounded pl-4 font-medium drop-shadow-xl lg:absolute lg:hidden lg:min-w-[200px] lg:bg-white/90 lg:pl-0 lg:backdrop-blur-md">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'hover:text-link whitespace-no-wrap block px-5 py-2 first:rounded-t last:rounded-b lg:hover:bg-gray-100',
                            { 'aw-link-active': href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'hover:text-link flex items-center px-4 py-3',
                    { 'aw-link-active': href === currentPath },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:mr-auto rtl:ml-0': position === 'left' },
        'fixed bottom-0 left-0 hidden w-full items-center justify-end p-3 lg:static lg:mb-0 lg:flex lg:w-auto lg:self-center lg:justify-self-end lg:p-0 rtl:right-0 rtl:left-auto',
      ]}
    >
      <div class="flex w-full items-center justify-between lg:w-auto">
        <div class="flex">
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 lg:w-5 lg:h-5 lg:inline-block" class="mr-8" />}
          {
            showRssFeed && (
              <a
                class="text-muted inline-flex items-center rounded-lg p-2.5 text-sm hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 focus:outline-none"
                aria-label="RSS Feed"
                href={getAsset('/rss.xml')}
              >
                <Icon name="tabler:rss" class="h-5 w-5" />
              </a>
            )
          }
          {
            showSocial && (
              <>
                <a
                  class="text-muted inline-flex items-center rounded-lg p-2.5 text-sm hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 focus:outline-none"
                  aria-label="WhatsApp"
                  href="https://wa.me/555195794880"
                >
                  <Icon name="tabler:brand-whatsapp" class="h-5 w-5" />
                </a>
                <a
                  class="text-muted inline-flex items-center rounded-lg p-2.5 text-sm hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 focus:outline-none"
                  aria-label="Facebook"
                  href="https://www.facebook.com/Geas38rs"
                >
                  <Icon name="tabler:brand-facebook" class="h-5 w-5" />
                </a>
                <a
                  class="text-muted inline-flex items-center rounded-lg p-2.5 text-sm hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 focus:outline-none"
                  aria-label="Instagram"
                  href="https://www.instagram.com/escoteirosalbert/"
                >
                  <Icon name="tabler:brand-instagram" class="h-5 w-5" />
                </a>
              </>
            )
          }
        </div>
        {
          actions?.length ? (
            <span class="ml-4 rtl:mr-4 rtl:ml-0">
              {actions.map((btnProps) => (
                <Button {...btnProps} class="ml-2 w-auto px-5.5 py-2.5 text-sm font-semibold shadow-none lg:px-6" />
              ))}
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>
