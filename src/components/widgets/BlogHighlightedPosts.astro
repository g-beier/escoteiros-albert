---
import { APP_BLOG } from 'astrowind:config';

import Grid from '~/components/blog/Grid.astro';

import { getBlogPermalink } from '~/utils/permalinks';
import { findPostsByIds } from '~/utils/blog';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Widget } from '~/types';

export interface Props extends Widget {
  title?: string;
  linkText?: string;
  linkUrl?: string | URL;
  information?: string;
  postIds: string[];
}

const {
  title = await Astro.slots.render('title'),
  linkText = 'Veja todos os posts',
  linkUrl = getBlogPermalink(),
  information = await Astro.slots.render('information'),
  postIds = [],

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

const posts = APP_BLOG.isEnabled ? await findPostsByIds(postIds) : [];
---

{
  APP_BLOG.isEnabled ? (
    <WidgetWrapper id={id} isDark={isDark} containerClass={classes?.container as string} bg={bg}>
      <div class="mb-8 flex flex-col lg:flex-row lg:justify-between">
        {title && (
          <div class="md:max-w-sm">
            <h2 class="group font-heading mb-2 text-3xl font-bold sm:text-4xl sm:leading-none" set:html={title} />
            {APP_BLOG.list.isEnabled && linkText && linkUrl && (
              <a
                class="text-muted hover:text-primary mb-6 block transition duration-200 ease-in lg:mb-0"
                href={linkUrl}
              >
                {linkText} Â»
              </a>
            )}
          </div>
        )}

        {information && <p class="text-muted lg:max-w-md lg:text-sm" set:html={information} />}
      </div>

      <Grid posts={posts} />
    </WidgetWrapper>
  ) : (
    <Fragment />
  )
}
