---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import { APP_STORE } from 'astrowind:config';
import type { Product } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { Icon } from 'astro-icon/components';
import Badge, { type BadgeAppearance } from './Badge.astro';

export interface Props {
  product: Product;
}

const { product } = Astro.props;
const image = (await findImage(product.images?.[0])) as ImageMetadata | undefined;

const link = APP_STORE?.product?.isEnabled ? getPermalink(product.permalink, 'product') : '';

const badgeAppearance: Record<Product['badge'] & string, BadgeAppearance> = {
  desconto: 'success',
  novo: 'success',
  indispon√≠vel: 'danger',
  encomenda: 'neutral',
};
---

<article class={`max-w-md mx-auto md:max-w-none flex gap-2 flex-col group`}>
  {
    image ? (
      link ? (
        <a href={link} class="relative">
          {product.badge && <Badge appearance={badgeAppearance[product.badge]}>{product?.badge}</Badge>}

          <Image
            src={image}
            class="aspect-square w-full rounded-xl object-cover shadow-lg transition-transform ease-in-out group-hover:scale-105"
            alt={product.title}
            loading="eager"
            decoding="async"
            widths={[400, 900]}
            width={900}
            sizes="(max-width: 900px) 400px, 900px"
          />
        </a>
      ) : (
        <div class="relative">
          {product.badge && <Badge appearance={badgeAppearance[product.badge]}>{product?.badge}</Badge>}

          <Image
            src={image}
            class="aspect-square w-full rounded-xl object-cover shadow-lg transition-transform ease-in-out group-hover:scale-105"
            alt={product.title}
            loading="eager"
            decoding="async"
            widths={[400, 900]}
            width={900}
            sizes="(max-width: 900px) 400px, 900px"
          />
        </div>
      )
    ) : link ? (
      <a href={link} aria-label={product.title} class="relative">
        {product.badge && <Badge appearance={badgeAppearance[product.badge]}>{product?.badge}</Badge>}

        <div class="grid aspect-square place-items-center rounded-xl bg-gray-100 shadow-lg">
          <Icon name="tabler:camera-off" class="text-muted h-16 w-16 drop-shadow-md" />
        </div>
      </a>
    ) : (
      <div class="relative grid aspect-square place-items-center rounded-xl bg-gray-100 shadow-lg">
        {product.badge && <Badge appearance={badgeAppearance[product.badge]}>{product?.badge}</Badge>}
        <Icon name="tabler:camera-off" class="text-muted h-16 w-16 drop-shadow-md" />
      </div>
    )
  }
  <div class="mt-2">
    <header>
      <h2 class="text-lg leading-tight font-semibold">
        {
          link ? (
            <a class="group-hover:text-primary inline-block transition duration-200 ease-in" href={link}>
              {product.title}
            </a>
          ) : (
            product.title
          )
        }
      </h2>
      {
        product.price && (
          <span
            class="text-muted"
            set:text={new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(product.price)}
          />
        )
      }
    </header>
  </div>
</article>
